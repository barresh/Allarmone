{"ast":null,"code":"import { webSocket } from \"rxjs/webSocket\";\nimport * as i0 from \"@angular/core\";\nclass WebSocketService {\n  constructor() {\n    this.socket$ = webSocket(\"ws://localhost:8080\"); // Sostituisci con l'URL del tuo server\n  }\n\n  sendMessage(message) {\n    this.socket$.next(message);\n  }\n  getMessages() {\n    return this.socket$.asObservable();\n  }\n}\nWebSocketService.ɵfac = function WebSocketService_Factory(t) {\n  return new (t || WebSocketService)();\n};\nWebSocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WebSocketService,\n  factory: WebSocketService.ɵfac,\n  providedIn: \"root\"\n});\nexport { WebSocketService };","map":{"version":3,"names":["webSocket","WebSocketService","constructor","socket$","sendMessage","message","next","getMessages","asObservable","factory","ɵfac","providedIn"],"sources":["/Users/barresh/Allarmone/frontend/src/app/websocket-service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class WebSocketService {\n  private socket$: WebSocketSubject<any>;\n\n  constructor() {\n    this.socket$ = webSocket(\"ws://localhost:8080\"); // Sostituisci con l'URL del tuo server\n  }\n\n  sendMessage(message: any) {\n    this.socket$.next(message);\n  }\n\n  getMessages(): Observable<any> {\n    return this.socket$.asObservable();\n  }\n}\n"],"mappings":"AAEA,SAASA,SAAS,QAA0B,gBAAgB;;AAE5D,MAGaC,gBAAgB;EAG3BC,YAAA;IACE,IAAI,CAACC,OAAO,GAAGH,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;EACnD;;EAEAI,WAAWA,CAACC,OAAY;IACtB,IAAI,CAACF,OAAO,CAACG,IAAI,CAACD,OAAO,CAAC;EAC5B;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACJ,OAAO,CAACK,YAAY,EAAE;EACpC;;AAbWP,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;SAAhBA,gBAAgB;EAAAQ,OAAA,EAAhBR,gBAAgB,CAAAS,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEPV,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}